plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'kr.co.loopz'
version = '0.0.1-SNAPSHOT'
description = 'ceos-cgv-payment-mock'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // spring
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // test
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'

    // DB
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.1.0"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

    // monitoring
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // test only h2 database
    testImplementation 'com.h2database:h2'

    // p6spy
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'


}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslGenerated = layout.buildDirectory.dir("generated/querydsl").get().asFile
sourceSets {
    main {
        java {
            srcDirs += querydslGenerated
        }
    }
}

tasks.named('compileJava') {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslGenerated)
}
